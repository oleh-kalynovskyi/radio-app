{"version":3,"sources":["component/Radio.js","App.js","index.js"],"names":["Radio","state","all","likeRadio","stationTag","value","Theme","getStations","a","api","RadioBrowserApi","fetch","bind","window","searchStations","tag","limit","offset","name","stations","setState","addRadioList","el","find","station","id","localStorage","setItem","JSON","stringify","removeFromRadioList","filter","filteredList","e","target","darkTheme","backgroundPlayer","buttonBackground","buttonColor","document","body","style","lightTheme","ClassicTheme","checkLike","map","includes","onClick","className","title","this","parse","getItem","htmlFor","type","onChange","placeholder","background","color","length","tags","join","country","src","urlResolved","controls","Component","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c77ec3e3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { RadioBrowserApi } from 'radio-browser-api';\r\nimport ReactAudioPlayer from 'react-audio-player';\r\n\r\nimport { FcLike } from 'react-icons/fc';\r\nimport { FcDislike } from 'react-icons/fc';\r\n\r\nexport default class Radio extends Component {\r\n\r\n    state = {\r\n        all: [],\r\n        likeRadio: [],\r\n        stationTag: [], \r\n        value: \"\",\r\n        Theme: {},\r\n    };\r\n\r\n    componentDidMount () {\r\n        this.getStations()\r\n        const likeRadio = JSON.parse(localStorage.getItem('likeRadio'))\r\n        if(likeRadio) {\r\n            this.setState({ \r\n                likeRadio\r\n            });\r\n        }\r\n    };\r\n\r\n    getStations = async () => {\r\n        let {stationTag} = this.state\r\n        const api = new RadioBrowserApi(fetch.bind(window),'My Radio App')\r\n        const stations = await api.searchStations({\r\n          tag: stationTag === \"All\" ? '' : stationTag,\r\n          limit: 20,\r\n          offset: 0,\r\n          name: this.state.value\r\n        })\r\n\r\n        this.setState({ \r\n            all: stations,\r\n        });\r\n    }\r\n\r\n    addRadioList = async (el) => {\r\n        await this.setState({\r\n            likeRadio: [...this.state.likeRadio, this.state.all.find( station => station.id === el.id)]\r\n        });\r\n        localStorage.setItem(\"likeRadio\", JSON.stringify(this.state.likeRadio));\r\n    };\r\n    removeFromRadioList = async (el) => {\r\n        await this.setState({\r\n            likeRadio: this.state.likeRadio.filter(station => station.id !== el.id)\r\n        });\r\n        localStorage.setItem(\"likeRadio\", JSON.stringify(this.state.likeRadio));\r\n    };\r\n\r\n    // type fm stations\r\n    filter = [\r\n        \"All\",\r\n        \"classical\",\r\n        \"dance\",\r\n        \"disco\",\r\n        \"house\",\r\n        \"jazz\",\r\n        \"pop\",\r\n        \"rap\",\r\n        \"90s\",\r\n        \"rock\",\r\n    ];\r\n\r\n    // search station\r\n    filteredList = (e) => {\r\n        this.getStations()\r\n        this.setState({ value: e.target.value })\r\n    };\r\n\r\n\r\n    darkTheme = () => {\r\n        this.setState({ Theme: {\r\n            backgroundPlayer: 'rgb(98, 57, 48)',\r\n            buttonBackground: 'rgb(104, 57, 108)',\r\n            buttonColor: 'white'\r\n        }})\r\n        document.body.style = 'background: rgb(51, 51, 47);color: white;';\r\n    };\r\n    lightTheme = () => {\r\n        this.setState({ Theme: {\r\n            backgroundPlayer: 'rgb(151, 165, 193)',\r\n            buttonBackground: 'rgb(94, 158, 186)',\r\n            buttonColor: 'rgb(0, 0, 0 )'\r\n        }})\r\n        document.body.style = 'background: rgb(197, 207, 198 );color: rgb(0, 0, 0 );';\r\n\r\n    };\r\n    ClassicTheme = () => {\r\n        this.setState({ Theme: {\r\n            backgroundPlayer: '',\r\n            buttonBackground: '',\r\n            buttonColor: ''\r\n        }})\r\n        document.body.style = 'background: ; color: ;';\r\n    };\r\n\r\n\r\n    checkLike = (el) => {\r\n        const likeIdis = this.state.likeRadio.map(el => el.id)\r\n        if( !likeIdis.includes(el.id) ) {\r\n            return <FcLike onClick={() => this.addRadioList(el)}\r\n                className=\"FcDislike\" \r\n                title=\"Save station\"/> \r\n        } else {\r\n            return <FcDislike onClick={() => this.removeFromRadioList(el)}\r\n                className=\"FcDislike\"\r\n                title=\"Remove from saved\"\r\n                />\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <div className=\"skin-search-wrapper\">\r\n                <div className=\"skin\">\r\n                    <span>Choose Theme:</span>\r\n                    <label htmlFor=\"Light\"> <input\r\n                        id=\"Light\"\r\n                        type=\"radio\" \r\n                        name=\"Theme\"\r\n                        onChange={ this.lightTheme }/> \r\n                        Light</label>\r\n\r\n                    <label htmlFor=\"Dark\"> <input \r\n                        id=\"Dark\" \r\n                        type=\"radio\" \r\n                        name=\"Theme\"\r\n                        onChange={ this.darkTheme }\r\n                        /> Dark</label>\r\n\r\n                    <label htmlFor=\"Classic\"> <input \r\n                        id=\"Classic\" \r\n                        type=\"radio\" \r\n                        name=\"Theme\" \r\n                        onChange={ this.ClassicTheme }/> \r\n                        Classic</label>\r\n                </div>\r\n\r\n                <div className=\"search\">\r\n                    <input value={this.state.value} onChange={ this.filteredList } placeholder=\"Find radio station\"/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"filter\">\r\n                <p>Select Radio:</p>\r\n                <div className=\"filter-items\">\r\n                    {this.filter.map( el => (\r\n                        <button\r\n                            className={this.state.stationTag === el ? 'button-active' : ''}\r\n                            key={el}\r\n                            onClick={ () => this.setState({ stationTag: (el) }, ()=> this.getStations()) }\r\n                            style={{ \r\n                                background: this.state.Theme.buttonBackground, \r\n                                color: this.state.Theme.buttonColor,\r\n                            }}>\r\n                            {el} \r\n                        </button>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            <ul className=\"likeRadio\">\r\n                <p className=\"likeRadio-text\">Saved Stations: { this.state.likeRadio.length > 0 ? '' : \"add favorite radio\" } </p>\r\n                {this.state.likeRadio.map( el => (\r\n                    <li key={el.id} className=\"likeRadio-item\"> \r\n                        <FcDislike onClick={ () => this.removeFromRadioList(el) }\r\n                            className=\"FcDislike\" \r\n                            title=\"Remove from saved\"/>\r\n                        <span> \r\n                            Station Name: {el.name}\r\n                        </span>\r\n                        <span>\r\n                            Music: {el.tags.join(', ')} \r\n                        </span>\r\n                        <span>\r\n                            Country: {el.country}\r\n                        </span>\r\n\r\n                        <ReactAudioPlayer\r\n                            src={el.urlResolved} \r\n                            controls\r\n                        />\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n            <ul className=\"radio-list\">\r\n                { this.state.all.map(el => (\r\n                <li key={el.id} className=\"radio-item\" style={{ background: this.state.Theme.backgroundPlayer }}>\r\n\r\n                    <p>\r\n                        {this.checkLike(el)}\r\n                    </p>\r\n\r\n                    <span className=\"station-name\">\r\n                        Station Name: {el.name} \r\n                    </span>\r\n                    <span className=\"music-tags\">\r\n                        Music: {el.tags.join(', ')}\r\n                    </span>\r\n                    <span className=\"country-radio\">\r\n                        Country: {el.country}\r\n                    </span>\r\n\r\n                    <ReactAudioPlayer\r\n                        src={el.urlResolved} \r\n                        controls\r\n                    />\r\n                </li>\r\n                ))}\r\n            </ul>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import './App.css';\nimport Radio from './component/Radio'\n\nfunction App() {\n  return (\n    <>\n      <h1 className=\"maine-title\">Best 20 Radio </h1>\n      <Radio/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}